{"version":3,"sources":["webpack:///./src/data/xp.js","webpack:///./src/data/config.js","webpack:///./src/effect/isPrint.js","webpack:///./src/effect/isTouch.js","webpack:///./src/effect/isKeyboard.js","webpack:///./src/fun/createMediaQuery.js","webpack:///./src/effect/sizes.js","webpack:///./src/store.js"],"names":["xp","key","company","location","position","since","Date","till","responsibilities","react__WEBPACK_IMPORTED_MODULE_0__","href","Object","_store__WEBPACK_IMPORTED_MODULE_1__","FALLBACK_LANGUAGE","DEFAULT_LANGUAGE","media","freeze","U","S3","GteS3","Infinity","GtS3","LteS2","S2","GteS2","GtS2","LteS1","S1","GteS1","GtS1","LteS","S","GteS","GtS","LteM","M","GteM","GtM","LteL","L","GteL","GtL","LteL1","L1","GteL1","GtL1","LteL2","L2","GteL2","L3","isPrint_mql","isPrint","setter","addEventListener","event","matches","matchMedia","isTouch_mql","moz","isTouch","window","keyboard","clicks","mqls","Map","sizes","size","has","set","min","max","createMediaQuery","config","mql","get","log","silly","setLang","lib","setIsTouch","setIsKeyboard","setIsPrint","setTheme","setBuzzwords","setXp","setCategories","setJobsRaw","setSizes","value","toggleMenu","toggleCategory","toggleLevel","toggleAz","lensLang","lensProp","lensIsTouch","lensIsKeyboard","lensIsPrint","lensTheme","lensBuzzwords","lensXp","lensCategories","lensJobsRaw","lensSizes","lensMenu","lensCategory","lensLevel","lensAz","reducer","[object Object]","state","payload","over","menu","az","category","x","level","lensSize","old","lang","isKeyboard","document","querySelector","map","join","theme","buzzwordsRaw","buzzwords","categories","jobsRaw","keys","reduce","r","_objectSpread","frontend","backend","general","bestPractices","personality","ok","info","warning","error","primary","secondary","store","es","forEach","assignTo"],"mappings":"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","file":"4.js","sourcesContent":["// @flow\n\nimport * as React from 'react';\n\nimport { setXp } from '~/store';\n\nconst xp = [\n    {\n        key: 'no-name startup',\n        company: 'no-name startup',\n        location: 'Belgorod',\n        position: '“Full-stack developer”',\n        since: new Date('2016-07-01T00:00:00.000Z'),\n        till: new Date('2016-11-01T00:00:00.000Z'),\n        responsibilities: (\n            <>\n                {'Planning, prototyping and implementing any crazy ideas. '}\n                {'Development of a service with NodeJS (Express, MongoDB; experimenting with Koa and RethinkDB), '}\n                {'design of basic concepts of recommender system, '}\n                {'planning and basic design of social AR application. '}\n                {'Epic fail at all.'}\n            </>\n        ),\n    },\n    {\n        key: 'ratengoods',\n        company: (\n            <a key={'ratengoods'} href={'https://ratengoods.com/'}>\n                {'Rate&Goods'}\n            </a>\n        ),\n        location: 'Moscow',\n        position: 'Frontend developer',\n        since: new Date('2017-06-01T00:00:00.000Z'),\n        till: new Date('2017-06-01T00:00:00.000Z'),\n        responsibilities: <>{'Website/webapp development, refactoring, fixing bugs, delivering new features. Etc.'}</>,\n    },\n    {\n        key: 'itsph',\n        company: (\n            <a key={'itsph'} href={'https://itsph.ru/'}>\n                {'IT Sphere'}\n            </a>\n        ),\n        position: 'NodeJS developer',\n        location: 'Moscow',\n        since: new Date('2017-07-01T00:00:00.000Z'),\n        till: new Date('2017-10-01T00:00:00.000Z'),\n        responsibilities: (\n            <>\n                {'Microservices development (NodeJS), fuckery with poorly documented chinese hardware. '}\n                {`Sometimes solving React tasks for next door dept's customers.`}\n            </>\n        ),\n    },\n    {\n        key: 'quokka',\n        company: (\n            <a key={'quokka'} href={'http://quokka.pub/'}>\n                {'Quokka'}\n            </a>\n        ),\n        position: 'JavaScript developer',\n        location: 'Moscow',\n        since: new Date('2017-10-01T00:00:00.000Z'),\n        till: new Date('2018-02-01T00:00:00.000Z'),\n        responsibilities: (\n            <>\n                {`Parser and compiler internals development (for our reactive framework's DSL; also nearly system language for our OS), `}\n                {'some tasks on the framework core itself and on the our quasi-OS.'}\n            </>\n        ),\n    },\n];\n\nsetXp(xp);\n","// @flow\n\nimport type { SizeLimits } from './config.types.js';\n\nexport { ExactSizeLimits, ExactSize, SizeLimits, Size, Sizes, ExactSizes } from './config.types';\n\nexport const FALLBACK_LANGUAGE = 'en';\nexport const DEFAULT_LANGUAGE = 'en';\n\nconst min = 50;\n\nconst u = 0;\nconst U = 49;\n\nconst s3 = 50;\nconst S3 = 199;\n\nconst s2 = 200;\nconst S2 = 299;\n\nconst s1 = 300;\nconst S1 = 399;\n\nconst s = 400;\nconst S = 599;\n\nconst m = 600;\nconst M = 799;\n\nconst l = 800;\nconst L = 1199;\n\nconst l1 = 1200;\nconst L1 = 1899;\n\nconst l2 = 1900;\nconst L2 = 2499;\n\nconst l3 = 2500;\nconst L3 = Infinity;\n\nconst max = Infinity;\n\n// prettier-ignore\nexport const media: SizeLimits = Object.freeze({\n    U:     [u  , U  ], // Unsupported.\n\n    S3:    [s3 , S3 ], // Embedded display.\n    GteS3: [s3 , max],\n    GtS3:  [s2 , max],\n\n    LteS2: [min, S2 ],\n    S2:    [s2 , S2 ], // Old-school 240×320 phone.\n    GteS2: [s2 , max],\n    GtS2:  [s1 , max],\n\n    LteS1: [min, S1 ],\n    S1:    [s1 , S1 ], // Smartphone.\n    GteS1: [s1 , max],\n    GtS1:  [s  , max],\n\n    LteS:  [min, S  ],\n    S:     [s  , S  ], // Portrait tablet.\n    GteS:  [s  , max],\n    GtS:   [m  , max],\n\n    LteM:  [min, M  ],\n    M:     [m  , M  ], // Landscape tablet.\n    GteM:  [m  , max],\n    GtM:   [l  , max],\n\n    LteL:  [min, L  ],\n    L:     [l  , L  ], // Netbook.\n    GteL:  [l  , max],\n    GtL:   [l1 , max],\n\n    LteL1: [min, L1 ],\n    L1:    [l1 , L1 ], // Small laptop.\n    GteL1: [l1 , max],\n    GtL1:  [l2 , max],\n\n    LteL2: [min, L2 ],\n    L2:    [l2 , L2 ], // High definition.\n    GteL2: [l2 , max],\n\n    L3:    [l3 , L3 ], // Over 9000 pixels.\n});\n","// @flow\n\nlet mql: ?MediaQueryList = null;\n\nexport const isPrint: (?(?boolean) => mixed) => boolean = setter => {\n    if (!mql) {\n        mql = matchMedia('print');\n\n        return isPrint(setter);\n    }\n\n    if (setter) {\n        mql.addEventListener('change', (event: MediaQueryListEvent) => {\n            setter(event.matches);\n        });\n    }\n\n    return mql.matches;\n};\n","// @flow\n\nlet mql: ?MediaQueryList = null;\nlet moz: ?MediaQueryList = null;\n\nexport const isTouch: (?(?boolean) => mixed) => boolean = setter => {\n    // TODO: Detect using `TouchEvent`.\n\n    if (!mql || !moz) {\n        mql = matchMedia('(any-pointer: coarse)');\n        moz = matchMedia('(-moz-touch-enabled)');\n\n        return isTouch(setter);\n    }\n\n    if (setter) {\n        mql.addEventListener('change', (event: MediaQueryListEvent) => {\n            setter(event.matches);\n        });\n    }\n\n    return mql.matches || 'ontouchstart' in window;\n};\n","// @flow\n\nlet keyboard = false;\nlet clicks = 0;\n\nconst MAX_CLICKS = 2;\n\nexport const isKeyboard: (?(?boolean) => mixed) => boolean = setter => {\n    window.addEventListener('keydown', () => {\n        if (\n            document.querySelector(\n                [\n                    ...['text', 'password', 'date', 'datetime-local', 'month', 'number', 'search', 'tel', 'time', 'url', 'week'].map(x => `input[type=${x}]`),\n                    'textarea',\n                ]\n                    .map(x => `${x}:focus`)\n                    .join(','),\n            ) === null\n        ) {\n            // TODO: Ignore most common keyboard shortcuts.\n\n            keyboard = true;\n            clicks = 0;\n\n            if (setter) {\n                setter(true);\n            }\n        }\n    });\n\n    window.addEventListener('mousedown', () => {\n        if (clicks < MAX_CLICKS) {\n            clicks++;\n        } else {\n            keyboard = false;\n\n            if (setter) {\n                setter(false);\n            }\n        }\n    });\n\n    return keyboard;\n};\n","// @flow\n\nexport const createMediaQuery: ([number, number]) => string = ([min, max]) => {\n    if (max === Infinity) {\n        return `only screen and (min-width: ${min}px)`;\n    } else {\n        return `only screen and (min-width: ${min}px) and (max-width: ${max}px)`;\n    }\n};\n","// @flow\n\nimport { log } from '~/log';\nimport { media } from '~/data/config';\nimport { createMediaQuery } from '~/fun/createMediaQuery';\n\nimport type { Size } from '~/data/config';\n\nconst mqls: Map<Size, MediaQueryList> = new Map();\n\nexport const sizes: (Size, ?(Size, ?boolean) => mixed) => boolean = (size, setter) => {\n    if (!mqls.has(size)) {\n        mqls.set(size, matchMedia(createMediaQuery(media[size])));\n\n        return sizes(size, setter);\n    }\n\n    const mql: MediaQueryList = (mqls.get(size): HACK);\n\n    if (setter) {\n        mql.addEventListener('change', (event: MediaQueryListEvent) => {\n            setter(size, event.matches);\n        });\n    }\n\n    if (!setter) {\n        log.silly(mql);\n    }\n\n    return mql.matches;\n};\n","// @flow\n\nimport { createAction, createReducer } from 'redux-act';\nimport { createStore } from 'redux';\nimport { lensProp, over } from 'ramda';\n\nimport { DEFAULT_LANGUAGE, media } from './data/config';\nimport { isPrint } from './effect/isPrint';\nimport { isTouch } from './effect/isTouch';\nimport { isKeyboard } from './effect/isKeyboard';\nimport { sizes } from './effect/sizes';\n\nexport const setLang = createAction('set `lang`');\nexport const setIsTouch = createAction('set `isTouch`');\nexport const setIsKeyboard = createAction('set `isKeyboard`');\nexport const setIsPrint = createAction('set `isPrint`');\nexport const setTheme = createAction('set `theme`');\nexport const setBuzzwords = createAction('set `buzzwords`');\nexport const setXp = createAction('set `xp`');\nexport const setCategories = createAction('set `categories`');\nexport const setJobsRaw = createAction('set `jobsRaw`');\nexport const setSizes = createAction('set `sizes`', (size, value) => [size, value]);\nexport const toggleMenu = createAction('toggle `menu`');\nexport const toggleCategory = createAction('toggle `category[x]`');\nexport const toggleLevel = createAction('toggle `level[x]`');\nexport const toggleAz = createAction('toggle `az`');\n\nconst lensLang = lensProp('lang');\nconst lensIsTouch = lensProp('isTouch');\nconst lensIsKeyboard = lensProp('isKeyboard');\nconst lensIsPrint = lensProp('isPrint');\nconst lensTheme = lensProp('theme');\nconst lensBuzzwords = lensProp('buzzwords');\nconst lensXp = lensProp('xp');\nconst lensCategories = lensProp('categories');\nconst lensJobsRaw = lensProp('jobsRaw');\nconst lensSizes = lensProp('sizes');\nconst lensMenu = lensProp('menu');\nconst lensCategory = lensProp('category');\nconst lensLevel = lensProp('level');\nconst lensAz = lensProp('az');\n\nconst reducer = createReducer(\n    {\n        [setLang]: (state, payload) => over(lensLang, () => payload, state),\n        [setIsTouch]: (state, payload) => over(lensIsTouch, () => payload, state),\n        [setIsKeyboard]: (state, payload) => over(lensIsKeyboard, () => payload, state),\n        [setIsPrint]: (state, payload) => over(lensIsPrint, () => payload, state),\n        [setTheme]: (state, payload) => over(lensTheme, () => payload, state),\n        [setBuzzwords]: (state, payload) => over(lensBuzzwords, () => payload, state),\n        [setXp]: (state, payload) => over(lensXp, () => payload, state),\n        [setCategories]: (state, payload) => over(lensCategories, () => payload, state),\n        [setJobsRaw]: (state, payload) => over(lensJobsRaw, () => payload, state),\n        [toggleMenu]: state => over(lensMenu, () => !state.menu, state),\n        [toggleAz]: state => over(lensAz, () => !state.az, state),\n        [toggleCategory]: (state, payload) => over(lensCategory, category => over(lensProp(payload), x => !x, category), state),\n        [toggleLevel]: (state, payload) => over(lensLevel, level => over(lensProp(payload), x => !x, level), state),\n        [setSizes]: (state, [size, value]) => {\n            const lensSize = lensProp(size);\n\n            return over(lensSizes, old => over(lensSize, () => value, old), state);\n        },\n    },\n    {\n        lang: DEFAULT_LANGUAGE,\n        isTouch: isTouch(setIsTouch),\n        isKeyboard: isKeyboard(setIsKeyboard),\n        isPrint: isPrint(setIsPrint),\n        theme: 'dark',\n        buzzwordsRaw: null,\n        buzzwords: [],\n        categories: null,\n        jobsRaw: null,\n        sizes: Object.keys(media).reduce((r, size) => ({ ...r, [size]: sizes(size, setSizes) }), {}),\n        menu: false,\n        category: {\n            frontend: true,\n            backend: true,\n            general: true,\n            bestPractices: true,\n            personality: true,\n        },\n        level: {\n            ok: true,\n            info: true,\n            warning: true,\n            error: true,\n            primary: true,\n            secondary: true,\n        },\n        xp: null,\n        az: false,\n    },\n);\n\nexport const store =\n    process.env.NODE_ENV === 'development' && window.__REDUX_DEVTOOLS_EXTENSION__\n        ? createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__())\n        : createStore(reducer);\n\n[\n    setLang,\n    setIsTouch,\n    setIsKeyboard,\n    setIsPrint,\n    setTheme,\n    setBuzzwords,\n    setXp,\n    setCategories,\n    setJobsRaw,\n    setSizes,\n    toggleMenu,\n    toggleCategory,\n    toggleLevel,\n    toggleAz,\n].forEach(x => x.assignTo(store));\n"],"sourceRoot":""}